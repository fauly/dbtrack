"""Add unit_type to quantity_conversions

Revision ID: 0a7479f0336d
Revises: 
Create Date: 2025-04-17 11:02:06.979742

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0a7479f0336d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('last_edited', sa.DateTime(), nullable=False),
    sa.Column('temperatures', sa.JSON(), nullable=True),
    sa.Column('opening_clean', sa.DateTime(), nullable=True),
    sa.Column('midday_clean', sa.DateTime(), nullable=True),
    sa.Column('end_of_day_clean', sa.DateTime(), nullable=True),
    sa.Column('grey_water', sa.DateTime(), nullable=True),
    sa.Column('bin_emptied', sa.DateTime(), nullable=True),
    sa.Column('stock_used', sa.JSON(), nullable=True),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('food_waste', sa.Integer(), nullable=True),
    sa.Column('customer_feedback', sa.Text(), nullable=True),
    sa.Column('equipment_issues', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ingredients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('allergens', sa.String(length=255), nullable=True),
    sa.Column('dietary_mentions', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('lead_time', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('quantity_conversions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_name', sa.String(length=50), nullable=False),
    sa.Column('reference_unit_name', sa.String(length=50), nullable=False),
    sa.Column('reference_unit_amount', sa.Float(), nullable=False),
    sa.Column('unit_type', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unit_name')
    )
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('servings_type', sa.String(length=50), nullable=False),
    sa.Column('servings_count', sa.Integer(), nullable=False),
    sa.Column('ingredients', sa.JSON(), nullable=False),
    sa.Column('steps', sa.JSON(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('prep_time', sa.String(length=50), nullable=True),
    sa.Column('cook_time', sa.String(length=50), nullable=True),
    sa.Column('total_time', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('nutritional_values',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('fat', sa.Float(), nullable=True),
    sa.Column('fiber', sa.Float(), nullable=True),
    sa.Column('sugar', sa.Float(), nullable=True),
    sa.Column('other_nutrients', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe_tags',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('recipe_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe_tags')
    op.drop_table('nutritional_values')
    op.drop_table('tags')
    op.drop_table('recipes')
    op.drop_table('quantity_conversions')
    op.drop_table('ingredients')
    op.drop_table('daily_logs')
    # ### end Alembic commands ###
